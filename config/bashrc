source ~/repos/dotfiles/deploy/payload/bashrc

####################################
# Variables {{{
case "$HOSTNAME" in
    *)
        export EDITOR=vim
        export CVS_RSH=ssh
        export LS_COLORS='ow=01;38;5;93:*.css=34:*.js=34:*.py=34:*.rb=34:*.c=34:*.cc=34:*.cpp=34:*.sh=34:*.h.in=35:*.h=35:*.hpp=35:*.png=33:*.jpg=33:*.jpeg=33:*.gif=33:*.gifv=33:*.bmp=33:*.xcf=33:*.rar=31:*.7z=31:*.gz=31:*.xz=31:*.chm=31:*.xpi=31:*.tgz=31:*.tar=31:*.bz2=31:*.iso=31:*.zip=31:*.mp3=35:*.ogg=35:*.wav=35:*.avi=35:*.webm=35:*.mp4=35:*.mpg=35:*.ogv=35:*.html=34:*.pyo=38;5;237:*.pyc=38;5;237:*.o=38;5;237'
        export TIGRC_USER=~/.config/tigrc
        export PROMPT_DIRTRIM=4
        export HISTCONTROL=ignoreboth  # ignore duplicates & lines starting with spaces

        shopt -s histappend
        shopt -s checkwinsize
        shopt -s cmdhist # save multiline commands as 1 line in history
        ;;&
    turban|fez)
        export TERMCMD="urxvt"
        export CHANGET_TARGET=/home/archive/downloads/changet
        unset MAIL
        ;;&
    fez)
        export PATH=$HOME'/sync/bin/fez:'$HOME'/sync/bin/games:'$HOME'/sync/bin:'$HOME'/sync/bin/scripts:'$HOME'/sync/bin/redirected:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/games:/usr/games:/usr/bin/core_perl:'$HOME'/sync/bin/snes:/usr/bin/vendor_perl:/home/hut/.npm/bin:/usr/local/bin:/usr/local/sbin'
        export VIMWIKI_ROOT="$HOME/sync/notes/vimwiki/"
        export EXOBRAIN_ROOT=~/sync/notes/quick
        export JAVAFX_HOME="/usr/lib/jvm/java-8-openjdk/jre/lib/ext/jfxrt.jar"
        export systemini=~/.config/system.ini
        export PYTHONPATH="$HOME/repos/dotfiles/pythonlib/importpath"
        export IPYTHONDIR="$HOME/.config/ipython"
        export WEECHAT_HOME="~/.config/weechat"
        export MAKEFLAGS='-j 8'
        export PASSWORD_STORE_DIR="$HOME/sync/configs/password-store"
        export PASSWORD_STORE_CLIP_TIME=10

        ;;&
    lemming*)
        export VIMWIKI_ROOT="$HOME/vimwiki/"
        export EXOBRAIN_ROOT=~/vimwiki/Guides
        export EXOBRAIN_STATS_FILE=/dev/null
        export MAKEFLAGS='-j 4'
        export TERMCMD="konsole"
        ;;&
    turban)
        PATH=$HOME'/bin/turban:'$HOME'/bin:'$HOME'/bin/redirected:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/games:/usr/games:/usr/bin/core_perl'
        export MAKEFLAGS='-j 8'
        ;;&
    fez|lemming*)
        source ~/repos/exobrain/bash_tab_completion.sh
        function e  { ~/repos/exobrain/exobrain.py "$@"; }
        function ee { ~/repos/exobrain/exobrain.py -e "$@"; }
        function ea { echo "$(date +"%y-%m-%dT%H:%M")" "$@" >> "$EXOBRAIN_ROOT"/fino; }

        # Prompt
        if [ "$USER" != root ]; then
            export PS1='\[\033[0;38;5;243m\]\w\[\033[1;38;5;202m\]$(test "$?" -eq 0 && echo ">" || echo "$?") \[\033[0m\]'
            export PS1="$PS1$PROMPT_SUFFIX"
            if [ "$HOSTNAME" != fez ]; then
                export PS1='\A '"$PS1"
            fi
        fi
        ;;&
esac

# }}}

####################################
# If not running interactively, don't do anything further
[ -z "$PS1" ] && return

####################################
# Reusable functions {{{
testscm () {
    if git rev-parse --is-inside-git-dir >& /dev/null; then
        echo git
    elif svn info >& /dev/null; then
        echo svn
    else
        echo none
        return 1
    fi
}
function make-completion-wrapper () {
  local function_name="$2"
  local arg_count=$(($#-3))
  local comp_function_name="$1"
  shift 2
  local function="
    function $function_name {
      ((COMP_CWORD+=$arg_count))
      COMP_WORDS=( "$@" \${COMP_WORDS[@]:1} )
      "$comp_function_name"
      return 0
    }"
  eval "$function"
  echo $function_name
  echo "$function"
}
# }}}

####################################
# System-dependent instructions {{{
case "$HOSTNAME" in
    fez|lemming*)
        # Bookmarks for "cd" {{{
        BMDIR="$HOME/.hut/bookmarks"
        function cd {
            if [ "$#" -eq 1 -a ! -e "$1" ]; then
                if test -d "$BMDIR/$1"; then
                    command cd -P "$BMDIR/$1"
                    echo -ne '\033[1;33m>>>'
                    #ls
                    return
                fi
            fi
            if [ "$#" -eq 0 ]; then
                command cd ~
                return
            fi
            command cd "$@"
        }
        function bmark {
            if test -z "$1"; then
                ls -l "$BMDIR" | awk 'NR > 1 { print $9"\t"$11 }'
            else
                rm "$BMDIR/$1" 2> /dev/null
                ln -sf "$(pwd)" "$BMDIR/$1"
            fi
        }
        # }}}
        ;;&
    fez|turban)
        # Bind keys
        case "$-" in *i*)
            bind '"\C-x\C-r":"source ~/.bashrc\C-m"'
            bind '"\C-o":"\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-h\C-hranger-cd\C-m"'
            bind '"\C-x\C-m":"\C-uecho '\''\C-y'\''>>~/memo\C-m"'
            bind '"\C-x\C-f":"setfont Lat15-TerminusBold20x10.psf.gz\C-m"'
            bind '"\C-x=":"setfont Uni3-TerminusBold22x11\C-j"'
            bind '"\C-x-":"setfont Uni3-Terminus16\C-j"'
            ;;
        esac

        # Package Management
        alias pac="sudo packer"

        # Starting X
        alias x='if [ -z "$DISPLAY" ]; then xinit -- "$@" & clear; exit; else echo x already running; fi'
        alias x2='if [ -z "$DISPLAY" ]; then cd; X & sleep 1; DISPLAY=:0 exec sh .xinitrc & exit; else echo x already running; fi'
        ;;&
    fez)
        source /usr/share/bash-completion/completions/{git,route,rsync,ssh,scp,sshfs,strace,sudo,tar,tcpdump,tmux,umount,curl,wget,feh,fsck,gcc,passwd,gpasswd,mplayer,gpg2}
        alias db=dashboard
        alias gdv='ssh rzimbelmann@login.gdv.uni-hannover.de'
        function irc { ssh hut.pm -t tmux attach; }

        # Staying focused
        function _imbusy {
            test -f /tmp/state.working && return 0
            grep -qi '\(job\|learning\) = true' "$systemini" && return 0
            return 1
        }
        function scream { setsid blink; echo -ne "\E[38;5;46m"; toilet --font future "${1:-WORK, INSECT!}"; }
        for tool in irc sticky ncmpcpp; do
            eval "function $tool { if _imbusy; then scream; else command $tool \"\$@\"; fi }"  # because fuck it
        done
        ;;
    turban)
        function remote {
            export REMOTED=1
            export DISPLAY=:0
        }
        ;;
    lemming*)
        ;;
esac

# }}}

####################################
# Aliases {{{

# Generic tools
alias whatsmyip='dig +short myip.opendns.com \@resolver1.opendns.com'
alias rot13='tr a-zA-Z n-za-mN-ZA-M'
function dice {
    total=0
    for i in $(seq "$1"); do
        let "total += $RANDOM % $2 + 1"
    done
    echo $total
}
for i in {1..12}; do
    for j in {1..32}; do
        eval "alias ${i}d${j}='dice ${i} ${j}'"
    done
done


# Typos
alias hotp=htop
alias sl=ls
alias s=ls
alias wlits=wlist


# Fixed parameters
function sticky { tmux_session sticky; }
alias cal='cal -3'
function man {
    # Add some colors! <3
    env LESS_TERMCAP_mb=$'\E[01;31m' \
    LESS_TERMCAP_md=$'\E[1;38;5;172m' \
    LESS_TERMCAP_me=$'\E[0m' \
    LESS_TERMCAP_se=$'\E[0m' \
    LESS_TERMCAP_ue=$'\E[0m' \
    LESS_TERMCAP_us=$'\E[38;5;74m' \
    man "$@"
#    LESS_TERMCAP_md=$'\E[0;33m' \
#    LESS_TERMCAP_so=$'\E[38;5;246m' \
}
alias pass='EDITOR=nano pass'  # avoid vimhistory & other possible side effects
alias kbrate='xset r rate 220 35'
alias blk="lsblk -no NAME,SIZE,TYPE,FSTYPE,MOUNTPOINT"
alias ssh-f="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
alias sshfs-f="sshfs -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
alias restorebg='nitrogen --restore'
alias wget-r='wget -r --no-parent --reject "index.html*"'


# Shortcuts
export LS_OPTIONS='--color=auto --group-directories-first --quoting-style=literal'
alias ls='ls $LS_OPTIONS'
alias lsd='"ls" --color=always -Acr | tail -n 5'
alias ll='ls $LS_OPTIONS -l'
alias la='ls $LS_OPTIONS -A'
alias lsa='ls $LS_OPTIONS -lA'
alias l='ls $LS_OPTIONS -la'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

function plow { mkdir -p "$1" && cd "$1"; }

alias vim=nvim
alias am=alsamixer
alias sd=systemctl
alias e=exobrain
alias ee='exobrain -e'
alias plan="vim $VIMWIKI_ROOT/plan.wiki"

function a {
    if [[ -z "$@" ]]; then
        vim ~/anki
    else
        echo "$@" >> ~/anki
    fi
}
function lscd {    
    if [ "$#" -eq 0 ]; then
        source ~/repos/lscd/lscd
    else
        command cd "$@"
    fi
}
function tmux_session {
    if tmux has -t $1; then
        tmux -f ~/.config/tmux.conf attach -t $1
    else
        tmux -f ~/.config/tmux.conf new-session -s $1
    fi
}
function ranger-cd {
    tempfile='/tmp/chosendir'
    extra_args=
    if [ -n "$REMOTED" ]; then
        set -- "$@" "--cmd=chain map <enter> play_remote; map x shell killall mpv"
    fi
    python2.7 ~/repos/ranger/ranger.py --choosedir="$tempfile" "${@:-$(pwd)}"
    test -f "$tempfile" &&
    if [ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]; then
        cd -- "$(cat "$tempfile")"
        rm -f -- "$tempfile"
    fi
}
_taskdone() {
    if [ "$#" -eq 1 ]; then
        task "$1" 'done'
    else
        task "$@"
    fi
}
for i in {1..100}; do
    alias "$i"="_taskdone $i"
done


# Version Control Systems
function vcsfail { echo "Error: not in a VCS!"; }
function commit {
    if [ "$PWD" == "$HOME" ]; then
        case "$HOSTNAME" in
            lemming*|fez)
                (
                    cd ~/repos/dotfiles;
                    githut add -A;
                    githut commit -a --verbose -e -m "minor change" \
                    && if [ "$1" != '--local' ]; then
                        githut push
                    fi;
                );;
        esac
    else
        case "$(testscm)" in
            git)
                if [ "$HOSTNAME" == "fez" -a "$(basename "$(git rev-parse --show-toplevel)")" == ranger ]; then
                    # Sign the commit when commiting for ranger:
                    git commit -S "$@"
                else
                    githut commit "$@"
                fi;;
            svn)
                svn update
                svn commit
                ;;
            *) vcsfail;;
        esac
    fi
}
function u {
    if [ "$PWD" == "$HOME" ]; then
        case "$HOSTNAME" in
            lemming*|fez)
                ( cd ~/repos/dotfiles; git pull; );;
        esac
    elif [[ "$PWD" == "/projects" && "$HOSTNAME" =~ ^lemming ]]; then
        updateall.sh
    else
        case "$(testscm)" in
            git) git fetch;;
            svn) svn update;;
            *) vcsfail;;
        esac
    fi
}
function d {
    if [ "$PWD" == "$HOME" ]; then
        case "$HOSTNAME" in
            lemming*|fez)
                ( cd ~/repos/dotfiles; d );;
        esac
    elif [[ "$PWD" == "/projects" && "$HOSTNAME" =~ ^lemming ]]; then
        diffall.sh
    else
        case "$(testscm)" in
            git) git diff;;
            svn) svn diff | less -R;; # could use "| colordiff", but better to add it to diff-cmd in ~/.subversion/config
            *) vcsfail;;
        esac
    fi
}
function tag {
    # The name "tag" derives from "tig --all" and has nothing to do with tagging
    if [ "$PWD" == "$HOME" ]; then
        case "$HOSTNAME" in
            lemming*|fez)
                ( cd ~/repos/dotfiles; tag );;
        esac
    else
        case "$(testscm)" in
            git)
                tig --all;;
            svn)
                svn log --diff -r HEAD:0 | less;;
            *) vcsfail;;
        esac
    fi
}
function push {
    if [ "$PWD" == "$HOME" ]; then
        case "$HOSTNAME" in
            lemming*|fez)
                ( cd ~/repos/dotfiles; git push );;
        esac
    elif [ "$HOSTNAME" == "fez" -a "$(basename "$(git rev-parse --show-toplevel)")" == ranger ]; then
        "$(git rev-parse --show-toplevel)"/push.sh
    else
        case "$(testscm)" in
            git)
                git push;;
            svn)
                echo 'Pushing makes no sense in SVN, dude';;
            *) vcsfail;;
        esac
    fi
}

alias tlg='tig --branches'
alias pa='githut add -p'
alias c='githut checkout'
alias b='githut branch'
alias d-c='git diff --cached'
alias mt='githut mergetool --tool=vimdiff'

# }}}

####################################
# Terminal Colors in TTY {{{
if [ "$TERM" = "linux" ]; then
    echo -en "\e]P0000000" # Black
    echo -en "\e]P19e2838" # Red
    echo -en "\e]P2008800" # Green
    echo -en "\e]P3aa6633" # Yellow
    echo -en "\e]P45171b1" # Blue
    echo -en "\e]P5963c59" # Magenta
    echo -en "\e]P6418179" # Cyan
    echo -en "\e]P7bebebe" # White
    echo -en "\e]P8333333" # Bold Black
    echo -en "\e]P9bc5766" # Bold Red
    echo -en "\e]Pa61a171" # Bold Green
    echo -en "\e]Pbe7db52" # Bold Yellow
    echo -en "\e]Pc5085af" # Bold Blue
    echo -en "\e]Pda97a99" # Bold Magenta
    echo -en "\e]Pe6ba4a4" # Bold Cyan
    echo -en "\e]Pfffffff" # Bold White
fi
# }}}

######################################
# Local Overrides
test -f ~/.bashrc.local && source ~/.bashrc.local
